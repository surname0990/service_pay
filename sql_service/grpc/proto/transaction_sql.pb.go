// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/proto/transaction_sql.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WalletIdRequest struct {
	WalletId             int32    `protobuf:"varint,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WalletIdRequest) Reset()         { *m = WalletIdRequest{} }
func (m *WalletIdRequest) String() string { return proto.CompactTextString(m) }
func (*WalletIdRequest) ProtoMessage()    {}
func (*WalletIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89c2d9ea4da67d6e, []int{0}
}

func (m *WalletIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletIdRequest.Unmarshal(m, b)
}
func (m *WalletIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletIdRequest.Marshal(b, m, deterministic)
}
func (m *WalletIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletIdRequest.Merge(m, src)
}
func (m *WalletIdRequest) XXX_Size() int {
	return xxx_messageInfo_WalletIdRequest.Size(m)
}
func (m *WalletIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WalletIdRequest proto.InternalMessageInfo

func (m *WalletIdRequest) GetWalletId() int32 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

type TransactionId struct {
	TransactionId        string   `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionId) Reset()         { *m = TransactionId{} }
func (m *TransactionId) String() string { return proto.CompactTextString(m) }
func (*TransactionId) ProtoMessage()    {}
func (*TransactionId) Descriptor() ([]byte, []int) {
	return fileDescriptor_89c2d9ea4da67d6e, []int{1}
}

func (m *TransactionId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionId.Unmarshal(m, b)
}
func (m *TransactionId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionId.Marshal(b, m, deterministic)
}
func (m *TransactionId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionId.Merge(m, src)
}
func (m *TransactionId) XXX_Size() int {
	return xxx_messageInfo_TransactionId.Size(m)
}
func (m *TransactionId) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionId.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionId proto.InternalMessageInfo

func (m *TransactionId) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

type BalanceResponse struct {
	Balance              float64  `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalanceResponse) Reset()         { *m = BalanceResponse{} }
func (m *BalanceResponse) String() string { return proto.CompactTextString(m) }
func (*BalanceResponse) ProtoMessage()    {}
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89c2d9ea4da67d6e, []int{2}
}

func (m *BalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceResponse.Unmarshal(m, b)
}
func (m *BalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceResponse.Marshal(b, m, deterministic)
}
func (m *BalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceResponse.Merge(m, src)
}
func (m *BalanceResponse) XXX_Size() int {
	return xxx_messageInfo_BalanceResponse.Size(m)
}
func (m *BalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceResponse proto.InternalMessageInfo

func (m *BalanceResponse) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type UpdateBalanceRequest struct {
	WalletId             int32    `protobuf:"varint,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	NewBalance           float64  `protobuf:"fixed64,2,opt,name=new_balance,json=newBalance,proto3" json:"new_balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBalanceRequest) Reset()         { *m = UpdateBalanceRequest{} }
func (m *UpdateBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBalanceRequest) ProtoMessage()    {}
func (*UpdateBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89c2d9ea4da67d6e, []int{3}
}

func (m *UpdateBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBalanceRequest.Unmarshal(m, b)
}
func (m *UpdateBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBalanceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBalanceRequest.Merge(m, src)
}
func (m *UpdateBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBalanceRequest.Size(m)
}
func (m *UpdateBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBalanceRequest proto.InternalMessageInfo

func (m *UpdateBalanceRequest) GetWalletId() int32 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *UpdateBalanceRequest) GetNewBalance() float64 {
	if m != nil {
		return m.NewBalance
	}
	return 0
}

type Transaction struct {
	TransactionId        string               `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	WalletId             int32                `protobuf:"varint,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Amount               float64              `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Type                 string               `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	RequestTime          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	Status               string               `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_89c2d9ea4da67d6e, []int{4}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *Transaction) GetWalletId() int32 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *Transaction) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Transaction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Transaction) GetRequestTime() *timestamp.Timestamp {
	if m != nil {
		return m.RequestTime
	}
	return nil
}

func (m *Transaction) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_89c2d9ea4da67d6e, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*WalletIdRequest)(nil), "grpc.WalletIdRequest")
	proto.RegisterType((*TransactionId)(nil), "grpc.TransactionId")
	proto.RegisterType((*BalanceResponse)(nil), "grpc.BalanceResponse")
	proto.RegisterType((*UpdateBalanceRequest)(nil), "grpc.UpdateBalanceRequest")
	proto.RegisterType((*Transaction)(nil), "grpc.Transaction")
	proto.RegisterType((*Empty)(nil), "grpc.Empty")
}

func init() {
	proto.RegisterFile("grpc/proto/transaction_sql.proto", fileDescriptor_89c2d9ea4da67d6e)
}

var fileDescriptor_89c2d9ea4da67d6e = []byte{
	// 393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x5b, 0xcb, 0xd3, 0x40,
	0x14, 0x24, 0xb5, 0x17, 0x7b, 0x62, 0xad, 0x5d, 0x2f, 0x84, 0xf8, 0xd0, 0x12, 0x10, 0x0a, 0x42,
	0x0a, 0x2d, 0x88, 0x14, 0x7c, 0xf1, 0x42, 0x29, 0xf8, 0x62, 0x5a, 0xf1, 0x31, 0x6c, 0x93, 0x63,
	0x09, 0xe4, 0xd6, 0xec, 0x89, 0xa1, 0xff, 0xd3, 0x7f, 0xe2, 0x1f, 0x90, 0xec, 0x6e, 0x34, 0x6d,
	0x3f, 0xf8, 0xbe, 0xb7, 0x9c, 0xc9, 0x9c, 0x99, 0xd9, 0x9d, 0x85, 0xd9, 0xb1, 0xc8, 0x83, 0x45,
	0x5e, 0x64, 0x94, 0x2d, 0xa8, 0xe0, 0xa9, 0xe0, 0x01, 0x45, 0x59, 0xea, 0x8b, 0x53, 0xec, 0x4a,
	0x94, 0x75, 0x6b, 0x86, 0x3d, 0x3d, 0x66, 0xd9, 0x31, 0x46, 0xc5, 0x3c, 0x94, 0x3f, 0x17, 0x14,
	0x25, 0x28, 0x88, 0x27, 0xb9, 0xa2, 0x39, 0x2e, 0x8c, 0x7f, 0xf0, 0x38, 0x46, 0xda, 0x86, 0x1e,
	0x9e, 0x4a, 0x14, 0xc4, 0x5e, 0xc3, 0xb0, 0x92, 0x90, 0x1f, 0x85, 0x96, 0x31, 0x33, 0xe6, 0x3d,
	0xef, 0x71, 0xa5, 0x39, 0xce, 0x3b, 0x18, 0xed, 0xff, 0xfb, 0x6d, 0x43, 0xf6, 0x06, 0x9e, 0xb6,
	0x03, 0xe8, 0x95, 0xa1, 0x37, 0xa2, 0x36, 0xcd, 0x79, 0x0b, 0xe3, 0x8f, 0x3c, 0xe6, 0x69, 0x80,
	0x1e, 0x8a, 0x3c, 0x4b, 0x05, 0x32, 0x0b, 0x06, 0x07, 0x05, 0xc9, 0x15, 0xc3, 0x6b, 0x46, 0x67,
	0x0f, 0x2f, 0xbe, 0xe7, 0x21, 0x27, 0xfc, 0xb7, 0x72, 0x7f, 0x32, 0x36, 0x05, 0x33, 0xc5, 0xca,
	0x6f, 0x24, 0x3b, 0x52, 0x12, 0x52, 0xac, 0xb4, 0x88, 0xf3, 0xdb, 0x00, 0xb3, 0x95, 0xfd, 0x81,
	0xc9, 0x2f, 0x4d, 0x3b, 0x57, 0xa6, 0xaf, 0xa0, 0xcf, 0x93, 0xac, 0x4c, 0xc9, 0x7a, 0x24, 0xfd,
	0xf4, 0xc4, 0x18, 0x74, 0xe9, 0x9c, 0xa3, 0xd5, 0x95, 0x8a, 0xf2, 0x9b, 0x7d, 0x80, 0x27, 0x85,
	0x3a, 0x88, 0x5f, 0xb7, 0x60, 0xf5, 0x66, 0xc6, 0xdc, 0x5c, 0xda, 0xae, 0xaa, 0xc8, 0x6d, 0x2a,
	0x72, 0xf7, 0x4d, 0x45, 0x9e, 0xa9, 0xf9, 0x35, 0x52, 0x5b, 0x09, 0xe2, 0x54, 0x0a, 0xab, 0x2f,
	0x45, 0xf5, 0xe4, 0x0c, 0xa0, 0xf7, 0x25, 0xc9, 0xe9, 0xbc, 0xfc, 0x63, 0x00, 0xec, 0xbe, 0x7d,
	0xdd, 0x61, 0xf1, 0x2b, 0x0a, 0x90, 0xad, 0x01, 0x36, 0x48, 0xfa, 0xf0, 0xec, 0xa5, 0x5b, 0xbf,
	0x07, 0xf7, 0xaa, 0x6b, 0x5b, 0xc3, 0xd7, 0xd5, 0xbc, 0x87, 0xd1, 0x45, 0x01, 0xcc, 0x56, 0xbc,
	0xbb, 0x5a, 0xb1, 0x4d, 0xf5, 0x4f, 0x86, 0x60, 0x2b, 0x98, 0x7c, 0x2a, 0x90, 0x13, 0xb6, 0x6f,
	0x7a, 0xa2, 0x18, 0x2d, 0xe8, 0x72, 0x69, 0x0d, 0xcf, 0x36, 0x48, 0xed, 0x77, 0xf5, 0x99, 0x3d,
	0xbf, 0xd9, 0xd9, 0x86, 0xf6, 0xad, 0xd0, 0xa1, 0x2f, 0xef, 0x6d, 0xf5, 0x37, 0x00, 0x00, 0xff,
	0xff, 0x2f, 0x05, 0x48, 0xec, 0x12, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SQLServiceClient is the client API for SQLService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SQLServiceClient interface {
	GetBalance(ctx context.Context, in *WalletIdRequest, opts ...grpc.CallOption) (*BalanceResponse, error)
	UpdateBalance(ctx context.Context, in *UpdateBalanceRequest, opts ...grpc.CallOption) (*Empty, error)
	CreateTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Empty, error)
	GetTransactionID(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*Transaction, error)
}

type sQLServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSQLServiceClient(cc grpc.ClientConnInterface) SQLServiceClient {
	return &sQLServiceClient{cc}
}

func (c *sQLServiceClient) GetBalance(ctx context.Context, in *WalletIdRequest, opts ...grpc.CallOption) (*BalanceResponse, error) {
	out := new(BalanceResponse)
	err := c.cc.Invoke(ctx, "/grpc.SQLService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sQLServiceClient) UpdateBalance(ctx context.Context, in *UpdateBalanceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc.SQLService/UpdateBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sQLServiceClient) CreateTransaction(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc.SQLService/CreateTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sQLServiceClient) GetTransactionID(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/grpc.SQLService/GetTransactionID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SQLServiceServer is the server API for SQLService service.
type SQLServiceServer interface {
	GetBalance(context.Context, *WalletIdRequest) (*BalanceResponse, error)
	UpdateBalance(context.Context, *UpdateBalanceRequest) (*Empty, error)
	CreateTransaction(context.Context, *Transaction) (*Empty, error)
	GetTransactionID(context.Context, *TransactionId) (*Transaction, error)
}

// UnimplementedSQLServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSQLServiceServer struct {
}

func (*UnimplementedSQLServiceServer) GetBalance(ctx context.Context, req *WalletIdRequest) (*BalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedSQLServiceServer) UpdateBalance(ctx context.Context, req *UpdateBalanceRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBalance not implemented")
}
func (*UnimplementedSQLServiceServer) CreateTransaction(ctx context.Context, req *Transaction) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransaction not implemented")
}
func (*UnimplementedSQLServiceServer) GetTransactionID(ctx context.Context, req *TransactionId) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionID not implemented")
}

func RegisterSQLServiceServer(s *grpc.Server, srv SQLServiceServer) {
	s.RegisterService(&_SQLService_serviceDesc, srv)
}

func _SQLService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SQLServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.SQLService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SQLServiceServer).GetBalance(ctx, req.(*WalletIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SQLService_UpdateBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SQLServiceServer).UpdateBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.SQLService/UpdateBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SQLServiceServer).UpdateBalance(ctx, req.(*UpdateBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SQLService_CreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SQLServiceServer).CreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.SQLService/CreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SQLServiceServer).CreateTransaction(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _SQLService_GetTransactionID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SQLServiceServer).GetTransactionID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.SQLService/GetTransactionID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SQLServiceServer).GetTransactionID(ctx, req.(*TransactionId))
	}
	return interceptor(ctx, in, info, handler)
}

var _SQLService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.SQLService",
	HandlerType: (*SQLServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _SQLService_GetBalance_Handler,
		},
		{
			MethodName: "UpdateBalance",
			Handler:    _SQLService_UpdateBalance_Handler,
		},
		{
			MethodName: "CreateTransaction",
			Handler:    _SQLService_CreateTransaction_Handler,
		},
		{
			MethodName: "GetTransactionID",
			Handler:    _SQLService_GetTransactionID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/proto/transaction_sql.proto",
}
